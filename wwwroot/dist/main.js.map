{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/models/configClasses.repository.ts","webpack:///./src/app/models/model.module.ts","webpack:///./src/app/models/repository.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<table class=\\\"table table-sm table-striped\\\">\\r\\n    <tr>\\r\\n        <th>Name</th><th>Category</th><th>Price</th>\\r\\n        <th>Supplier</th><th>Ratings</th>\\r\\n    </tr>\\r\\n    <tr *ngFor=\\\"let product of products\\\">\\r\\n        <td>{{product.name}}</td>\\r\\n        <td>{{product.category}}</td>\\r\\n        <td>{{product.price}}</td>\\r\\n        <td>{{product.supplier?.name || 'None'}}</td>\\r\\n        <td>{{product.ratings?.length || 0}}</td>\\r\\n    </tr>\\r\\n</table>\\r\\n\\r\\n<!--<table class=\\\"table table-sm table-striped\\\">\\r\\n    <tr><th colspan=\\\"2\\\" class=\\\"bg-info\\\">Product</th></tr>\\r\\n    <tr><th>Name</th><td>{{product?.name || 'Loading Data...' }}</td></tr>\\r\\n    <tr><th>Category</th><td>{{product?.category || 'Loading Data...' }}</td></tr>\\r\\n    <tr><th>Description</th><td>{{product?.description || 'Loading Data...' }}</td></tr>\\r\\n    <tr><th>Price</th><td>{{product?.price || 'Loading Data...' }}</td></tr>\\r\\n    <tr><th colspan=\\\"2\\\" class=\\\"bg-info\\\">Supplier</th></tr>\\r\\n    <tr><th>Name</th><td>{{product?.supplier?.name}}</td></tr>\\r\\n    <tr><th>City</th><td>{{product?.supplier?.city}}</td></tr>\\r\\n    <tr><th>State</th><td>{{product?.supplier?.state}}</td></tr>\\r\\n    <tr><th>Products</th><td>{{product?.supplier?.products?.length}}</td></tr>\\r\\n</table>-->\"","import { Component } from '@angular/core';\nimport { Repository } from \"./models/repository\";\nimport { Product } from \"./models/product.model\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n    title = 'Angular & ASP.NET Core MVC';\n\n    constructor(private repo: Repository) { }\n\n    get product(): Product {\n        return this.repo.product;\r\n    }\n\n    get products(): Product[] {\n        return this.repo.products;\r\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { ModelModule } from \"./models/model.module\";\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n      BrowserModule,\n      FormsModule,\n      HttpModule,\n      ModelModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","﻿export class Filter {\r\n    category?: string;\r\n    search?: string;\r\n    related: boolean = false;\r\n\r\n    reset() {\r\n        this.category = this.search = null;\r\n        this.related = false;\r\n    }\r\n}","﻿import { NgModule } from \"@angular/core\";\r\nimport { Repository } from \"./repository\";\r\n\r\n@NgModule({\r\n    providers: [Repository]\r\n})\r\nexport class ModelModule { }","﻿import { Product } from \"./product.model\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Http, RequestMethod, Request, Response } from \"@angular/http\";\r\n\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from \"rxjs\";\r\nimport { Filter } from './configClasses.repository';\r\n\r\n\r\nconst productsUrl = \"/api/products\";\r\n\r\n@Injectable()\r\nexport class Repository {\r\n    private filterObject = new Filter();\r\n\r\n    constructor(private http: Http) {\r\n        this.filter.category = \"soccer\";\r\n        this.filter.related = true;\r\n        this.getProducts();\r\n    }\r\n\r\n    getProduct(id: number) {\r\n        this.sendRequest(RequestMethod.Get, productsUrl + \"/\" + id)\r\n            .subscribe(response => this.product = response);\r\n    }\r\n\r\n    getProducts() {\r\n        let url = productsUrl + \"?related=\" + this.filter.related;\r\n        if (this.filter.category) {\r\n            url += \"&category=\" + this.filter.category;\r\n        }\r\n        if (this.filter.search) {\r\n            url += \"&search=\" + this.filter.search;\r\n        }\r\n        this.sendRequest(RequestMethod.Get, url)\r\n            .subscribe(response => this.products = response);\r\n    }\r\n\r\n    private sendRequest(verb: RequestMethod, url: string, data?: any): Observable<any> {\r\n        return this.http.request(new Request({\r\n            method: verb, url: url, body: data\r\n        })).pipe(map(response => response.json()));\r\n    }\r\n\r\n    product: Product;\r\n    products: Product[];\r\n\r\n    get filter() {\r\n        return this.filterObject;\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}